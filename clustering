#clustering
import numpy as py
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns

reading data , importing data set
ds= pd.read_csv('Mall_Customers.csv')
ds.head()
ds.isnull().sum() 
sns.pairplot(ds)
plt.show()
x=ds.iloc[:,[3,4]].values

from sklearn.cluster import KMeans
kmeans=KMeans(n_clusters=5, init='k-means++',random_state=42)
y_predict=kmeans.fit_predict(x)
y_predict

x[y_predict==0,0]

plt.scatter(x[y_predict==0,0],x[y_predict==0,1],s=50,c='blue',marker='+',label='cluster 1')
plt.scatter(x[y_predict==1,0],x[y_predict==1,1],s=50,c='green',marker='o',label='cluster 2')
plt.scatter(x[y_predict==2,0],x[y_predict==2,1],s=50,c='red',label='cluster 3')
plt.scatter(x[y_predict==3,0],x[y_predict==3,1],s=50,c='cyan',label='cluster 4')
plt.scatter(x[y_predict==4,0],x[y_predict==4,1],s=50,c='magenta',label='cluster 5')

plt.scatter(kmeans.cluster_centers_[:,0],kmeans.cluster_centers_[:,1],s=300,c='black',marker='x',label='centroid')
plt.title('cluster of customers')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score(1-100)')
plt.legend()

from sklearn.cluster import AgglomerativeClustering
agg_clustering=AgglomerativeClustering(n_clusters=5,affinity='euclidean', linkage='ward')
y_pred=agg_clustering.fit_predict(x)
y_pred

import scipy.cluster.hierarchy as shc
dendro= shc.dendrogram(shc.linkage(x,method='ward'))
plt.title('Dendrogrma plot')
plt.ylabel('Euclidean distances')
plt.xlabel('customers')
plt.show()

